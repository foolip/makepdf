#!/bin/bash
# Written by Igor Zhbanov <izh1979@gmail.com>
#
# This script implements caching for optimized PNG images to reduce the time
# of optimization because of very slow pngout tool.
# It stores oprimized images in $CACHEDIR directory with file names based on
# SHA1 sum of original file and its size. So if we find that some image was
# already optimized, we can return optimized version immediately.

CACHEDIR="/$HOME/.pngout"

PNGOUT="/usr/local/bin/pngout-orig"
CP="/usr/bin/cp"
CUT="/usr/bin/cut"
MKDIR="/usr/bin/mkdir"
SHA1SUM="/usr/bin/sha1sum"
STAT="/usr/bin/stat"

ifile=""
ofile=""
err=0

for((i = 1; i <= $#; i++)); do
	arg=${!i}
	if [ "z${arg:0:1}" != "z-" ]; then
		if [ "z$ifile" == "z" ]; then
			ifile=$arg
		elif [ "z$ofile" == "z" ]; then
			ofile=$arg
		else
			err=1
		fi
	fi
done

if [ $# -eq 0 -o $err -eq 1 ]; then
	# Wrong arguments
	exec "$PNGOUT" "$@"
fi

if [ "z$ofile" == "z" ]; then
	ofile=$ifile
fi

if [ ! -d "$CACHEDIR" ]; then
	if ! "$MKDIR" "$CACHEDIR"; then
		echo "pngout: Warning: Can't create PNG cache directory."
		exec "$PNGOUT" "$@"
	fi
fi

fsize=`"$STAT" -c "%s" "$ifile" 2> /dev/null`
if [ "z$fsize" == "z" ]; then
	echo "pngout: Error: Can't find input PNG file."
	exec "$PNGOUT" "$@"
fi

sum="`$SHA1SUM \"$ifile\" 2> /dev/null | \"$CUT\" -f 1 -d \" \"`"
if [ "z$sum" == "z" ]; then
	echo "pngout: Error: Can't calculate sha1sum of PNG file."
	exec "$PNGOUT" "$@"
fi

cachedfile="${CACHEDIR}/${fsize}_${sum}.png"
if [ -r "$cachedfile" ]; then
	echo "pngout: Info: Using cached optimized version of $ifile."
	exec cp "$cachedfile" "$ofile"
fi

"$PNGOUT" "$@"
ret=$?
if [ $ret -ne 0 -a $ret -ne 2 ]; then
	exit $ret;
fi

echo "pngout: Info: Copying optimized verion of $ifile to cache."
exec cp "$ofile" "$cachedfile"
